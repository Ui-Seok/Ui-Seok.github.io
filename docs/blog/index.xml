<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Home</title>
<link>https://ui-seok.github.io/docs/blog/index.html</link>
<atom:link href="https://ui-seok.github.io/docs/blog/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Mon, 04 Dec 2023 15:00:00 GMT</lastBuildDate>
<item>
  <title>머신러닝 시스템 설계 Ch.1</title>
  <dc:creator>Ui Seok</dc:creator>
  <link>https://ui-seok.github.io/docs/blog/posts/2023-12-06-book-review-1/index.html</link>
  <description><![CDATA[ 



<section id="머신러닝-시스템이란" class="level2">
<h2 class="anchored" data-anchor-id="머신러닝-시스템이란">1. 머신러닝 시스템이란</h2>
<p>프로덕션 환경에서 알고리즘은 ML 시스템의 일부이다. 시스템은 ML 프로젝트의 출발점이 된 비즈니스 요구 사항, 사용자와 개발자가 시스템과 상호 작용하는 인터페이스, 데이터 스택, 모델을 개발 및 모니터링하고 업데이트하기 위한 로직은 물론 해당 로직을 전달할 수 있는 인프라를 포함한다.</p>
<ul>
<li><p>ML 시스템</p>
<ul>
<li><p>배포, 모니터링, 로직 업데이트</p></li>
<li><p>피처 엔지니어링, ML 알고리즘, Evaluation</p></li>
<li><p>데이터</p></li>
<li><p>인프라</p></li>
</ul></li>
</ul>
<p>이러한 ML 시스템과 ML 시스템 사용자, 비즈니스 요구 사항, ML 시스템 개발자 모두가 구성 요소이다.</p>
</section>
<section id="머신러닝을-사용해야-하는-경우" class="level2">
<h2 class="anchored" data-anchor-id="머신러닝을-사용해야-하는-경우">2. 머신러닝을 사용해야 하는 경우</h2>
<p>먼저 프로젝트를 시작하기 전에 ML이 과연 필요한지 생각해야 한다.</p>
<p>ML은 기존 데이터로 부터 복잡한 패턴을 학습하고 이러한 패턴을 사용해 본 적 없는 데이터에 대해 예측을 수행하는 접근법이다.</p>
<p>여기서 봐야하는 관점은 학습 가능한 점, 복잡한 패턴, 데이터(사용 가능한 데이터, 본 적 없는 데이터), 예측, 반복적, 비용, 대규모 이다.</p>
<section id="학습-시스템에-학습-능력이-있음" class="level4">
<h4 class="anchored" data-anchor-id="학습-시스템에-학습-능력이-있음">1. 학습: 시스템에 학습 능력이 있음</h4>
<p>흔히 알려진 관계형 데이터베이스는 학습 능력이 없기 때문에 ML 시스템이 아니다. ML 시스템이 학습을 하려면 학습할 대상이 있어야 한다. 대부분의 경우에는 데이터로 학습한다.</p>
<p>Ex) 지도 학습의 경우, ML 시스템은 한 쌍으로 이뤄진 입력과 출력 데이터를 이용해 입력 데이터에서 출력 데이터를 생성하는 관계를 학습한다.</p>
</section>
<section id="복잡한-패턴-학습할-패턴이-존재하며-복잡함" class="level4">
<h4 class="anchored" data-anchor-id="복잡한-패턴-학습할-패턴이-존재하며-복잡함">2. 복잡한 패턴: 학습할 패턴이 존재하며 복잡함</h4>
<p>ML 시스템은 학습할 패턴이 있는 경우에만 유용하다.</p>


</section>
</section>

 ]]></description>
  <category>books</category>
  <guid>https://ui-seok.github.io/docs/blog/posts/2023-12-06-book-review-1/index.html</guid>
  <pubDate>Mon, 04 Dec 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>MLOps for MLE - 8</title>
  <dc:creator>Ui Seok</dc:creator>
  <link>https://ui-seok.github.io/docs/blog/posts/2023-12-02-MLOps-day8/index.html</link>
  <description><![CDATA[ 



<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<ol type="1">
<li>MLflow 서버에 저장된 모델을 불러오는 스크립트 작성</li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>실습을 진행했던 코드를 보고싶으시다면 <a href="https://github.com/Ui-Seok/mlops-tutorial">여기</a>를 눌러주세요</p>
</div>
</div>
</section>
<section id="실습" class="level2">
<h2 class="anchored" data-anchor-id="실습">실습</h2>
<section id="모델-불러오기" class="level3">
<h3 class="anchored" data-anchor-id="모델-불러오기">1. 모델 불러오기</h3>
<p><code>day 7</code> 에서 작성한 코드로 학습된 모델을 서버로부터 불러오는 코드를 작성함</p>
<section id="환경-변수-설정" class="level4">
<h4 class="anchored" data-anchor-id="환경-변수-설정">1.1 환경 변수 설정</h4>
<p><code>day 7</code> 에서와 같이 MLflow 서버에 접근하기 위한 환경 변수 설정</p>
</section>
<section id="모델-불러오기-1" class="level4">
<h4 class="anchored" data-anchor-id="모델-불러오기-1">1.2 모델 불러오기</h4>
<p><code>sklearn</code> 모델 불러오기</p>
<p><code>mlflow.sklearn.load_model</code> 함수를 사용해서 저장된 모델을 불러옴</p>
<p><code>run_id</code> 와 모델을 저장할 때 설정했던 모델 이름을 받을 수 있도록 외부 변수 설정</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">parser <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ArgumentParser()</span>
<span id="cb1-2">parser.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--run-id"</span>, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"run_id"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>)</span>
<span id="cb1-3">parser.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--model-name"</span>, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model_name"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sk_model"</span>)</span>
<span id="cb1-4">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parser.parse_args()</span></code></pre></div>
<p>위에서 받은 변수를 이용해 <code>runs:/run_id/model_name</code> 의 형식으로 문자열을 만들어 줌</p>
<p><code>model_pipeline = mlflow.sklearn.load_model(f"runs:/{args.run_id}/{args.model_name}")</code></p>
<p>이 때, <code>pyfunc</code> 로도 모델을 불러올수있음</p>
<p><code>mlflow.pyfunc.load_model</code> 을 사용 -&gt; <code>mlflow.pyfunc.PyFuncModel</code> 클래스로 불러와짐</p>
<p><code>model_pipeline = mlflow.pyfunc.load_model(f"runs:/{args.run_id}/{args.model_name}")</code></p>
</section>
</section>
<section id="inference-코드를-작성하고-마무리하면-전체-코드는-다음과-같음" class="level3">
<h3 class="anchored" data-anchor-id="inference-코드를-작성하고-마무리하면-전체-코드는-다음과-같음">2. inference 코드를 작성하고 마무리하면 전체 코드는 다음과 같음</h3>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load_model_from_registry.py</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> argparse <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ArgumentParser</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> mlflow</span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accuracy_score</span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 0. set mlflow environments</span></span>
<span id="cb2-11">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MLFLOW_S3_ENDPOINT_URL"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://localhost:9000"</span></span>
<span id="cb2-12">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MLFLOW_TRACKING_URI"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://localhost:5001"</span></span>
<span id="cb2-13">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AWS_ACCESS_KEY_ID"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"minio"</span></span>
<span id="cb2-14">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AWS_SECRET_ACCESS_KEY"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"miniostorage"</span></span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. load model from mlflow</span></span>
<span id="cb2-17">parser <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ArgumentParser()</span>
<span id="cb2-18">parser.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--model-name"</span>, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model_name"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sk_model"</span>)</span>
<span id="cb2-19">parser.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--run-id"</span>, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"run_id"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>)</span>
<span id="cb2-20">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parser.parse_args()</span>
<span id="cb2-21"></span>
<span id="cb2-22">model_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mlflow.sklearn.load_model(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"runs:/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>args<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>run_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>args<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>model_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-23"></span>
<span id="cb2-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. get data</span></span>
<span id="cb2-25">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.csv"</span>)</span>
<span id="cb2-26"></span>
<span id="cb2-27">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.drop([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"timestamp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"columns"</span>)</span>
<span id="cb2-28">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>]</span>
<span id="cb2-29">X_train, X_valid, y_train, y_valid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, train_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>)</span>
<span id="cb2-30"></span>
<span id="cb2-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. predict results</span></span>
<span id="cb2-32">train_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_pipeline.predict(X_train)</span>
<span id="cb2-33">valid_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_pipeline.predict(X_valid)</span>
<span id="cb2-34"></span>
<span id="cb2-35">train_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_train, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_pred)</span>
<span id="cb2-36">valid_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_valid, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>valid_pred)</span>
<span id="cb2-37"></span>
<span id="cb2-38"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Train Accuracy :"</span>, train_acc)</span>
<span id="cb2-39"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valid Accuracy :"</span>, valid_acc)</span></code></pre></div>
</section>
<section id="실행-결과" class="level3">
<h3 class="anchored" data-anchor-id="실행-결과">3. 실행 결과</h3>
<p><code>localhost:5001</code> 에 접속하여 저장된 모델의 <code>run</code> 을 클릭하여 <code>run_id</code> 와 <code>model_name</code> 을 확인</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-12-02-MLOps-day8/fig1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption"><code>run_id</code> 및 <code>model_name</code> 확인</figcaption>
</figure>
</div>
<p><code>python load_model_from_registry.py --model-name "sk_model" --run-id "RUN_ID"</code></p>
<p>에 값을 넣어서 실행</p>
<p>MLflow 서버의 metrics 를 확인하여 학습했던 결과와 같은지 확인</p>
<div class="quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-12-02-MLOps-day8/fig2.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">MLflow 서버의 결과: train_acc = 0.975, valid_acc = 0.9</figcaption>
</figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-12-02-MLOps-day8/fig3.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Local 환경의 결과: train_acc = 0.975, valid_acc = 0.9</figcaption>
</figure>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="reference" class="level2">
<h2 class="anchored" data-anchor-id="reference">Reference</h2>
<p><a href="https://mlops-for-mle.github.io/tutorial/">ML Engineer를 위한 MLOps tutorial</a> <a href="https://www.mlflow.org/docs/latest/models.html#storage-format">MLflow Storage Format</a></p>


</section>

 ]]></description>
  <category>mlops</category>
  <guid>https://ui-seok.github.io/docs/blog/posts/2023-12-02-MLOps-day8/index.html</guid>
  <pubDate>Fri, 01 Dec 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>MLOps for MLE - 7</title>
  <dc:creator>Ui Seok</dc:creator>
  <link>https://ui-seok.github.io/docs/blog/posts/2023-12-01-MLOps-day7/index.html</link>
  <description><![CDATA[ 



<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<ol type="1">
<li>모델을 학습하고 MLflow 서버에 저장</li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>실습을 진행했던 코드를 보고싶으시다면 <a href="https://github.com/Ui-Seok/mlops-tutorial">여기</a>를 눌러주세요</p>
</div>
</div>
</section>
<section id="실습" class="level2">
<h2 class="anchored" data-anchor-id="실습">실습</h2>
<section id="save-model-to-registry" class="level3">
<h3 class="anchored" data-anchor-id="save-model-to-registry">1. Save Model to Registry</h3>
<p><code>day 5</code> 에서 작성한 <code>db_train.py</code> 코드의 <code>#3. save_model</code> 부분을 변경하여 모델을 업로드하는 코드 작성</p>
<section id="환경-변수-추가" class="level4">
<h4 class="anchored" data-anchor-id="환경-변수-추가">1.1 환경 변수 추가</h4>
<p>MLflow 와 통신하기 위해서는 몇 가지 환경 변수가 설정되어야 함</p>
<p>유저가 학습한 모델을 MLflow 서버를 통해 Arifact Store 인 MinIO 에 저장함</p>
<p>이 과정에서 MinIO 의 접근 권한이 필요함</p>
<p>이 접근 권한 정보는 <code>day 6</code> 에서 Docker Compose 파일의 <code>mlflow-server</code> 와 <code>mlflow-artifact-store</code> 의 정보임</p>
<p>따라서 아이디와 비밀번호를 사전에 정의된 시스템 환경 변수에 설정해야 MinIO 에 접근할 수 있음</p>
<p>추가로 MLflow 서버와 S3(MinIO) 의 URI 도 함께 설정해야함</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"></span>
<span id="cb1-3">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MLFLOW_S3_ENDPOINT_URL"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://localhost:9000"</span></span>
<span id="cb1-4">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MLFLOW_TRACKING_URI"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://localhost:5001"</span></span>
<span id="cb1-5">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AWS_ACCESS_KEY_ID"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"minio"</span></span>
<span id="cb1-6">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AWS_SECRET_ACCESS_KEY"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"miniostorage"</span></span></code></pre></div>
<ul>
<li><em>MLFLOW_S3_ENDPOINT_URL</em> : 모델을 저장할 스토리지 주소</li>
<li><em>MLFLOW_TRACKING_URI</em> : 정보를 저장하기 위해 연결할 MLflow 서버의 수조</li>
<li><em>AWS_ACCESS_KEY_ID</em> : MinIO 에 접근하기 위한 아이디</li>
<li><em>AWS_SECRET_ACCESS_KEY</em> : MinIO 에 접근하기 위한 비밀번호</li>
</ul>
</section>
<section id="모델-저장하기" class="level4">
<h4 class="anchored" data-anchor-id="모델-저장하기">1.2 모델 저장하기</h4>
<p>MLflow 의 정보를 저장하기 위해 <code>experiment</code> 와 <code>run</code> 을 사용함</p>
<ul>
<li><code>experiment</code> : MLflow 에서 정보를 관리하기 위해 나누는 일종의 directory, 생성하지 않는 경우 <code>Default</code>로 저장됨</li>
<li><code>run</code> : <code>experiment</code> 에 저장되는 모델 실험 결과, 해당 <code>run</code> 에 실제 정보들이 저장되며 <code>experiment/run</code> 의 구조로 저장됨</li>
</ul>
<p><code>mlflow</code> 클래스를 이용하여 다음과 같이 코드를 작성함</p>
<p><code>parser</code> 를 활용하여 <code>model_name</code> 인자를 받아주고 <code>experiment</code> 는 <code>mlflow.set_experiment("new-exp")</code> 를 이용하여 이름을 정해줌</p>
<p><code>run</code> 을 담당하는 코드는 다음과 같음</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> mlflow.start_run():</span>
<span id="cb2-2">    mlflow.log_metrics({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train_acc"</span>: train_acc, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"valid_acc"</span>: valid_acc})</span>
<span id="cb2-3">    mlflow.sklearn.log_model(</span>
<span id="cb2-4">        sk_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model_pipeline,</span>
<span id="cb2-5">        artifact_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args.model_name,</span>
<span id="cb2-6">        signature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>signature,</span>
<span id="cb2-7">        input_example<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_sample,</span>
<span id="cb2-8">    )</span></code></pre></div>
<ul>
<li><em>mlflow.log_metrics</em> : 모델의 결과 metrics 를 Python 의 dictionary 형태로 입력해 생성된 <code>run</code> 을 저장</li>
<li><em>mlflow.sklearn.log_model</em> : <code>sklearn</code> 모델은 <code>mlflow.sklearn</code> 를 사용해 간편하게 업로드가 가능함</li>
</ul>
<p>모델은 다음과 같은 구조로 저장됨</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Directory written by mlflow.sklearn.save_model(model, "sk_model")</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">sk_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span></span>
<span id="cb3-4">├── MLmodel</span>
<span id="cb3-5">├── model.pkl</span>
<span id="cb3-6">├── conda.yaml</span>
<span id="cb3-7">├── python_env.yaml</span>
<span id="cb3-8">└── requirements.txt</span></code></pre></div>
</section>
</section>
<section id="전체-코드" class="level3">
<h3 class="anchored" data-anchor-id="전체-코드">2. 전체 코드</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save_model_to_registry.py</span></span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> argparse <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ArgumentParser</span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> mlflow</span>
<span id="cb4-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb4-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> psycopg2</span>
<span id="cb4-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accuracy_score</span>
<span id="cb4-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb4-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.pipeline <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Pipeline</span>
<span id="cb4-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb4-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.svm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SVC</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 0. set mlflow environments</span></span>
<span id="cb4-15">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MLFLOW_S3_ENDPOINT_URL"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://localhost:9000"</span></span>
<span id="cb4-16">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MLFLOW_TRACKING_URI"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://localhost:5001"</span></span>
<span id="cb4-17">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AWS_ACCESS_KEY_ID"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"minio"</span></span>
<span id="cb4-18">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AWS_SECRET_ACCESS_KEY"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"miniostorage"</span></span>
<span id="cb4-19"></span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. get data</span></span>
<span id="cb4-21">db_connect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> psycopg2.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(</span>
<span id="cb4-22">    user<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myuser"</span>,</span>
<span id="cb4-23">    password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mypassword"</span>,</span>
<span id="cb4-24">    host<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"localhost"</span>,</span>
<span id="cb4-25">    port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,</span>
<span id="cb4-26">    database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mydatabase"</span>,</span>
<span id="cb4-27">)</span>
<span id="cb4-28">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_sql(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SELECT * FROM iris_data ORDER BY id DESC LIMIT 100"</span>, db_connect)</span>
<span id="cb4-29"></span>
<span id="cb4-30">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.drop([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"timestamp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"columns"</span>)</span>
<span id="cb4-31">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>]</span>
<span id="cb4-32">X_train, X_valid, y_train, y_valid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, train_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>)</span>
<span id="cb4-33"></span>
<span id="cb4-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. model development and train</span></span>
<span id="cb4-35">model_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pipeline([(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scaler"</span>, StandardScaler()), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"svc"</span>, SVC())])</span>
<span id="cb4-36">model_pipeline.fit(X_train, y_train)</span>
<span id="cb4-37"></span>
<span id="cb4-38">train_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_pipeline.predict(X_train)</span>
<span id="cb4-39">valid_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_pipeline.predict(X_valid)</span>
<span id="cb4-40"></span>
<span id="cb4-41">train_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_train, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_pred)</span>
<span id="cb4-42">valid_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_valid, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>valid_pred)</span>
<span id="cb4-43"></span>
<span id="cb4-44"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Train Accuracy :"</span>, train_acc)</span>
<span id="cb4-45"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valid Accuracy :"</span>, valid_acc)</span>
<span id="cb4-46"></span>
<span id="cb4-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. save model</span></span>
<span id="cb4-48">parser <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ArgumentParser()</span>
<span id="cb4-49">parser.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--model-name"</span>, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model_name"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, default<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sk_model"</span>)</span>
<span id="cb4-50">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parser.parse_args()</span>
<span id="cb4-51"></span>
<span id="cb4-52">mlflow.set_experiment(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"new-exp"</span>)</span>
<span id="cb4-53"></span>
<span id="cb4-54">signature <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mlflow.models.signature.infer_signature(model_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>X_train, model_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_pred)</span>
<span id="cb4-55">input_sample <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> X_train.iloc[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span>
<span id="cb4-56"></span>
<span id="cb4-57"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> mlflow.start_run():</span>
<span id="cb4-58">    mlflow.log_metrics({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train_acc"</span>: train_acc, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"valid_acc"</span>: valid_acc})</span>
<span id="cb4-59">    mlflow.sklearn.log_model(</span>
<span id="cb4-60">        sk_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model_pipeline,</span>
<span id="cb4-61">        artifact_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>args.model_name,</span>
<span id="cb4-62">        signature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>signature,</span>
<span id="cb4-63">        input_example<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_sample,</span>
<span id="cb4-64">    )</span>
<span id="cb4-65"></span>
<span id="cb4-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. save data</span></span>
<span id="cb4-67">df.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.csv"</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<p>실행코드 : <code>python save_model_to_registry.py --model-name "sk_model"</code></p>
<p>실행 결과는 다음과 같음</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-12-01-MLOps-day7/fig1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">모델 저장 결과 상세</figcaption>
</figure>
</div>
</section>
</section>
<section id="reference" class="level2">
<h2 class="anchored" data-anchor-id="reference">Reference</h2>
<p><a href="https://mlops-for-mle.github.io/tutorial/">ML Engineer를 위한 MLOps tutorial</a></p>


</section>

 ]]></description>
  <category>mlops</category>
  <guid>https://ui-seok.github.io/docs/blog/posts/2023-12-01-MLOps-day7/index.html</guid>
  <pubDate>Thu, 30 Nov 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>MLOps for MLE - 6</title>
  <dc:creator>Ui Seok</dc:creator>
  <link>https://ui-seok.github.io/docs/blog/posts/2023-11-29-MLOps-day6/index.html</link>
  <description><![CDATA[ 



<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<ol type="1">
<li>Docker Compose 를 이용하여 MLflow 서버를 구축 및 띄움</li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>실습을 진행했던 코드를 보고싶으시다면 <a href="https://github.com/Ui-Seok/mlops-tutorial">여기</a>를 눌러주세요</p>
</div>
</div>
</section>
<section id="실습" class="level2">
<h2 class="anchored" data-anchor-id="실습">실습</h2>
<section id="mlflow-backend-store" class="level3">
<h3 class="anchored" data-anchor-id="mlflow-backend-store">1. MLflow Backend Store</h3>
<p><strong>Backend Store</strong> 란 수치 데이터와 MLflow 서버의 정보들을 체계적으로 관리하기 위한 DB 이다. Backend store 에는 모델의 학습 결과인 accuracy, f1-score, loss, hyperparameter 등의 수치 데이터와 run_id, run_name, experiment_name 등의 MLflow의 meta-data 가 저장된다.</p>
<p>Backend Store 로 사용하기 위해 PostgreSQL DB 를 새롭게 생성</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mlflow-backend-store</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> postgres:14.0</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">container_name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mlflow-backend-store</span></span>
<span id="cb1-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">environment</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">POSTGRES_USER</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mlflowuser</span></span>
<span id="cb1-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">POSTGRES_PASSWORD</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mlflowpassword</span></span>
<span id="cb1-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">POSTGRES_DB</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mlflowdatabase</span></span>
<span id="cb1-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">healthcheck</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMD"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pg_isready"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-q"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-U"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mlflowuser"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-d"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mlflowdatabase"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 10s</span></span>
<span id="cb1-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timeout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 5s</span></span>
<span id="cb1-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">retries</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span></code></pre></div>
</section>
<section id="mlflow-artifact-store" class="level3">
<h3 class="anchored" data-anchor-id="mlflow-artifact-store">2. MLflow Artifact Store</h3>
<p><strong>Artifact Store</strong> 란 MLflow 에서 학습된 모델을 저장하는 Model Registry 로써 이용하기 위한 storage server 이다. 이를 이용하면 기본적인 파일 시스템 보다 체계적으로 관리 할 수 있으며 외부에 있는 storage server 도 사용 할 수 있다는 장점이 있다.</p>
<p>Artifact store 로 <strong>MinIO</strong> 서버를 사용한다.</p>
<ul>
<li><p>MinIO 는 S3 를 대체할 수 있는 오픈 소스 개체 스토리지이다.</p></li>
<li><p>AWS S3 의 API 와도 호환이 가능해서 SDK도 동일하게 사용 가능하다.</p></li>
<li><p>MLflow 에서는 AWS S3 를 모델을 저장하기 위한 스토리지로 사용하도록 권장하고 있다.</p></li>
<li><p>실습에서 AWS credential 을 통해 MinIO 대신 AWS S3 를 사용해도 같은 결과를 얻을 수 있다.</p></li>
</ul>
<p>MinIO 의 스펙을 Compose 파일에 서비스 이름, 유저 이름, 비밀번호를 환경변수로 정의하고 호스트와 연결되는 포트 또한 정의</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mlflow-artifact-store</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> minio/minio</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">container_name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mlflow-artifact-store</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ports</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 9000:9000</span></span>
<span id="cb2-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 9001:9001</span></span>
<span id="cb2-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">environment</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MINIO_ROOT_USER</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> minio</span></span>
<span id="cb2-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MINIO_ROOT_PASSWORD</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> miniostorage</span></span>
<span id="cb2-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> server /data/minio --console-address :9001</span></span>
<span id="cb2-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">healthcheck</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMD"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"curl"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-f"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://localhost:9000/minio/health/live"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 30s</span></span>
<span id="cb2-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timeout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 20s</span></span>
<span id="cb2-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">retries</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span></code></pre></div>
</section>
<section id="mlflow-server" class="level3">
<h3 class="anchored" data-anchor-id="mlflow-server">3. MLflow Server</h3>
<p>위에서 만든 Backend Store와 Artifact Store에 접근 가능한 MLflow서버 생성</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> amd64/python:3.9-slim</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> update <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-4">    git <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-5">    wget <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> /var/lib/apt/lists/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> pip <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install mlflow psycopg2-binary boto3</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">RUN</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /tmp <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wget</span> https://dl.min.io/client/mc/release/linux-amd64/mc <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> +x mc <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mv</span> mc /usr/bin/mc</span></code></pre></div>
<p>작성된 Dockerfile 을 build 하도록 Compose 파일의 <code>service</code> 탭 밑에 정의</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mlflow-server</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">context</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> .</span></span>
<span id="cb4-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dockerfile</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Dockerfile</span></span>
<span id="cb4-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">container_name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mlflow-server</span></span>
<span id="cb4-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">depends_on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mlflow-backend-store</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">condition</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> service_healthy</span></span>
<span id="cb4-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mlflow-artifact-store</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">condition</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> service_healthy</span></span>
<span id="cb4-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ports</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 5001:5000</span></span>
<span id="cb4-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">environment</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AWS_ACCESS_KEY_ID</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> minio</span></span>
<span id="cb4-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AWS_SECRET_ACCESS_KEY</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> miniostorage</span></span>
<span id="cb4-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MLFLOW_S3_ENDPOINT_URL</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> http://mlflow-artifact-store:9000</span></span>
<span id="cb4-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb4-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /bin/sh</span></span>
<span id="cb4-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> -c</span></span>
<span id="cb4-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">      - </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb4-24">        mc config host add mlflowminio http://mlflow-artifact-store:9000 minio miniostorage &amp;&amp;</span>
<span id="cb4-25">        mc mb --ignore-existing mlflowminio/mlflow</span>
<span id="cb4-26">        mlflow server \</span>
<span id="cb4-27">        --backend-store-uri postgresql://mlflowuser:mlflowpassword@mlflow-backend-store/mlflowdatabase \</span>
<span id="cb4-28">        --default-artifact-root s3://mlflow/ \</span>
<span id="cb4-29">        --host 0.0.0.0</span></code></pre></div>
<ul>
<li>MinIO 에 접근하기 위한 계정 정보를 환경변수로 설정</li>
<li>모델을 저장할 때 사용할 MinIO 초기 버켓 생성</li>
<li>MLflow 서버를 끠우는 명령어 작성
<ul>
<li>PostgreSQL DB 에 연결하기 위한 keyword argument 추가</li>
<li>MinIO 에 연결하기 위한 keyword argument 추가</li>
</ul></li>
</ul>
<p>-&gt; Compose 를 띄우면 <code>localhost:5001</code> 을 통해 MLflow 서버에 접속이 가능하고 <code>localhost:9001</code> 을 통해 MinIO 서버에 접속이 가능하다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-11-29-MLOps-day6/fig1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">MLflow 접속화면</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-11-29-MLOps-day6/fig2.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Minio 접속화면</figcaption>
</figure>
</div>
</section>
</section>
<section id="reference" class="level2">
<h2 class="anchored" data-anchor-id="reference">Reference</h2>
<p><a href="https://mlops-for-mle.github.io/tutorial/">ML Engineer를 위한 MLOps tutorial</a></p>


</section>

 ]]></description>
  <category>mlops</category>
  <guid>https://ui-seok.github.io/docs/blog/posts/2023-11-29-MLOps-day6/index.html</guid>
  <pubDate>Tue, 28 Nov 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>MLOps for MLE - 5</title>
  <dc:creator>Ui Seok</dc:creator>
  <link>https://ui-seok.github.io/docs/blog/posts/2023-11-28-MLOps-day5/index.html</link>
  <description><![CDATA[ 



<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<ol type="1">
<li><p>DB에서 데이터를 가져오는 파이프라인 작성</p></li>
<li><p>이를 활용한 모델 스크립트 작성</p></li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>실습을 진행했던 코드를 보고싶으시다면 <a href="https://github.com/Ui-Seok/mlops-tutorial">여기</a>를 눌러주세요</p>
</div>
</div>
</section>
<section id="실습" class="level2">
<h2 class="anchored" data-anchor-id="실습">실습</h2>
<section id="load-data" class="level3">
<h3 class="anchored" data-anchor-id="load-data">1. Load Data</h3>
<p><strong>데이터를 추출하는 쿼리문</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">SELECT</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> iris_data <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ORDER</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">BY</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">id</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">DESC</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">LIMIT</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>;</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-11-28-MLOps-day5/fig1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">실행결과</figcaption>
</figure>
</div>
<p>-&gt; <code>id</code> column 을 기준으로 최신 데이터 100개를 추출하는 쿼리</p>
<p><strong>Pandas를 이용한 데이터 받아오기</strong></p>
<p><code>pandas.read_sql</code> 은 입력 argument 로 query 와 DB connector 를 받음</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> psycopg2</span>
<span id="cb2-3"></span>
<span id="cb2-4">db_connect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> psycopg2.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(host<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"localhost"</span>, database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mydatabase"</span>, user<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myuser"</span>, password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mypassword"</span>)</span>
<span id="cb2-5">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_sql(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SELECT * FROM iris_data ORDER BY id DESC LIMIT 100"</span>, db_connect)</span></code></pre></div>
<p>-&gt; 확인해보면 <code>df</code> 에 데이터가 쌓여있음</p>
<p><strong>모델 학습에 필요한 <code>X</code>와 <code>y</code>를 정의</strong></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb3-2"></span>
<span id="cb3-3">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.drop([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"timestamp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"columns"</span>)</span>
<span id="cb3-4">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>]</span>
<span id="cb3-5"></span>
<span id="cb3-6">X_train, X_valid, y_train, y_valid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, train_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>)</span></code></pre></div>
</section>
<section id="save-data" class="level3">
<h3 class="anchored" data-anchor-id="save-data">2. Save Data</h3>
<p>DB에 계속 데이터가 쌓이고 있으므로 데이터를 불러올 때마다 데이터가 변경됨. 따라서 Validation 용 데이터를 위해 따로 저장이 필요함</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">df.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"valid_data.csv"</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
</section>
<section id="전체-코드" class="level3">
<h3 class="anchored" data-anchor-id="전체-코드">3. 전체 코드</h3>
<p><strong>Train</strong></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> joblib</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> psycopg2</span>
<span id="cb5-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accuracy_score</span>
<span id="cb5-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb5-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb5-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.pipeline <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Pipeline</span>
<span id="cb5-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.svm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SVC</span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. get data</span></span>
<span id="cb5-11">db_connect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> psycopg2.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(host<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"localhost"</span>, database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mydatabase"</span>, user<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myuser"</span>, password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mypassword"</span>)</span>
<span id="cb5-12">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_sql(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SELECT * FROM iris_data ORDER BY id DESC LIMIT 100"</span>, db_connect)</span>
<span id="cb5-13">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.drop([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"timestamp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"columns"</span>)</span>
<span id="cb5-14">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>]</span>
<span id="cb5-15">X_train, X_valid, y_train, y_valid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, train_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>)</span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. model development and train</span></span>
<span id="cb5-18">model_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pipeline([(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scaler"</span>, StandardScaler()), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"svc"</span>, SVC())])</span>
<span id="cb5-19">model_pipeline.fit(X_train, y_train)</span>
<span id="cb5-20"></span>
<span id="cb5-21">train_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_pipeline.predict(X_train)</span>
<span id="cb5-22">valid_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_pipeline.predict(X_valid)</span>
<span id="cb5-23"></span>
<span id="cb5-24">train_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_train, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_pred)</span>
<span id="cb5-25">valid_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_valid, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>valid_pred)</span>
<span id="cb5-26"></span>
<span id="cb5-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Train Accuracy :"</span>, train_acc)</span>
<span id="cb5-28"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valid Accuracy :"</span>, valid_acc)</span>
<span id="cb5-29"></span>
<span id="cb5-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. save model</span></span>
<span id="cb5-31">joblib.dump(model_pipeline, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"db_pipeline.joblib"</span>)</span>
<span id="cb5-32"></span>
<span id="cb5-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. save data</span></span>
<span id="cb5-34">df.to_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.csv"</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<p><strong>Validation</strong></p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> joblib</span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accuracy_score</span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. reproduce data</span></span>
<span id="cb6-7">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.csv"</span>)</span>
<span id="cb6-8">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.drop([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"timestamp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"columns"</span>)</span>
<span id="cb6-9">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span>]</span>
<span id="cb6-10">X_train, X_valid, y_train, y_valid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, train_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>)</span>
<span id="cb6-11"></span>
<span id="cb6-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. load model</span></span>
<span id="cb6-13">pipeline_load <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"db_pipeline.joblib"</span>)</span>
<span id="cb6-14"></span>
<span id="cb6-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. validate</span></span>
<span id="cb6-16">load_train_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline_load.predict(X_train)</span>
<span id="cb6-17">load_valid_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline_load.predict(X_valid)</span>
<span id="cb6-18"></span>
<span id="cb6-19">load_train_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_train, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>load_train_pred)</span>
<span id="cb6-20">load_valid_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_valid, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>load_valid_pred)</span>
<span id="cb6-21"></span>
<span id="cb6-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Load Model Train Accuracy :"</span>, load_train_acc)</span>
<span id="cb6-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Load Model Valid Accuracy :"</span>, load_valid_acc)</span></code></pre></div>
</section>
</section>
<section id="reference" class="level2">
<h2 class="anchored" data-anchor-id="reference">Reference</h2>
<p><a href="https://mlops-for-mle.github.io/tutorial/">ML Engineer를 위한 MLOps tutorial</a></p>


</section>

 ]]></description>
  <category>mlops</category>
  <guid>https://ui-seok.github.io/docs/blog/posts/2023-11-28-MLOps-day5/index.html</guid>
  <pubDate>Mon, 27 Nov 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>MLOps for MLE - 4</title>
  <dc:creator>Ui Seok</dc:creator>
  <link>https://ui-seok.github.io/docs/blog/posts/2023-11-26-MLOps-day4/index.html</link>
  <description><![CDATA[ 



<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<ol type="1">
<li><p>기본적인 모델 학습 및 저장</p></li>
<li><p>모델 파이프라인 작성</p></li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>실습을 진행했던 코드를 보고싶으시다면 <a href="https://github.com/Ui-Seok/mlops-tutorial">여기</a>를 눌러주세요</p>
</div>
</div>
</section>
<section id="실습" class="level2">
<h2 class="anchored" data-anchor-id="실습">실습</h2>
<section id="base-model-코드-작성" class="level3">
<h3 class="anchored" data-anchor-id="base-model-코드-작성">1. Base Model 코드 작성</h3>
<p>데이터: <code>Iris</code></p>
<p>데이터 스케일링: <code>StandardScaler</code></p>
<p>모델: <code>SVC</code></p>
<p>정확도 metric: <code>accuracy_score</code></p>
<p>모델 저장 방법: <code>joblib</code></p>
<p>전체 코드는 아래와 같음</p>
<p><strong>Train 코드</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> joblib</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_iris</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accuracy_score</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.svm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SVC</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. get data</span></span>
<span id="cb1-9">X, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_iris(return_X_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, as_frame<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-10">X_train, X_valid, y_train, y_valid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, train_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>)</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. model development and train</span></span>
<span id="cb1-13">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StandardScaler()</span>
<span id="cb1-14">classifier <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SVC()</span>
<span id="cb1-15"></span>
<span id="cb1-16">scaled_X_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.fit_transform(X_train)</span>
<span id="cb1-17">scaled_X_valid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.transform(X_valid)</span>
<span id="cb1-18">classifier.fit(scaled_X_train, y_train)</span>
<span id="cb1-19"></span>
<span id="cb1-20">train_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classifier.predict(scaled_X_train)</span>
<span id="cb1-21">valid_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classifier.predict(scaled_X_valid)</span>
<span id="cb1-22"></span>
<span id="cb1-23">train_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_train, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_pred)</span>
<span id="cb1-24">valid_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_valid, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>valid_pred)</span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Train Accuracy :"</span>, train_acc)</span>
<span id="cb1-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valid Accuracy :"</span>, valid_acc)</span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. save model</span></span>
<span id="cb1-30">joblib.dump(scaler, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scaler.joblib"</span>)</span>
<span id="cb1-31">joblib.dump(classifier, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classifier.joblib"</span>)</span></code></pre></div>
<p><strong>Validate 코드</strong></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> joblib</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_iris</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accuracy_score</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. reproduce data</span></span>
<span id="cb2-7">X, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_iris(return_X_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, as_frame<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-8">X_train, X_valid, y_train, y_valid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, train_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>)</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. load model</span></span>
<span id="cb2-11">scaler_load <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scaler.joblib"</span>)</span>
<span id="cb2-12">classifier_load <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joblib.load(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classifier.joblib"</span>)</span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. validate</span></span>
<span id="cb2-15">scaled_X_train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler_load.transform(X_train)</span>
<span id="cb2-16">scaled_X_valid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler_load.transform(X_valid)</span>
<span id="cb2-17"></span>
<span id="cb2-18">load_train_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classifier_load.predict(scaled_X_train)</span>
<span id="cb2-19">load_valid_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classifier_load.predict(scaled_X_valid)</span>
<span id="cb2-20"></span>
<span id="cb2-21">load_train_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_train, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>load_train_pred)</span>
<span id="cb2-22">load_valid_acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> accuracy_score(y_true<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_valid, y_pred<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>load_valid_pred)</span>
<span id="cb2-23"></span>
<span id="cb2-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Load Model Train Accuracy :"</span>, load_train_acc)</span>
<span id="cb2-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Load Model Valid Accuracy :"</span>, load_valid_acc)</span></code></pre></div>
<p>-&gt; <code>joblib</code>의 load를 통해 학습한 모델을 불러옴</p>
</section>
<section id="model-pipeline-작성" class="level3">
<h3 class="anchored" data-anchor-id="model-pipeline-작성">2. Model Pipeline 작성</h3>
<p><strong>위에서 사용했던 모델인 <code>scaler</code>와 <code>SVC</code>를 통합</strong></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.pipeline <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Pipeline</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.svm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SVC</span>
<span id="cb3-4"></span>
<span id="cb3-5">model_pipeline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pipeline([(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scaler"</span>, StandardScaler()), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"svc"</span>, SVC())])</span></code></pre></div>
<p>-&gt; 이 코드를 활용하여 앞의 부분을 대체</p>
</section>
</section>
<section id="reference" class="level2">
<h2 class="anchored" data-anchor-id="reference">Reference</h2>
<p><a href="https://mlops-for-mle.github.io/tutorial/">ML Engineer를 위한 MLOps tutorial</a></p>


</section>

 ]]></description>
  <category>mlops</category>
  <guid>https://ui-seok.github.io/docs/blog/posts/2023-11-26-MLOps-day4/index.html</guid>
  <pubDate>Sun, 26 Nov 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>MLOps for MLE - 3</title>
  <dc:creator>Ui Seok</dc:creator>
  <link>https://ui-seok.github.io/docs/blog/posts/2023-11-25-MLOps-day3/index.html</link>
  <description><![CDATA[ 



<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<ol type="1">
<li><p>앞의 코드를 Docker 에서 활용하기 위해 Dockerfile 작성</p></li>
<li><p>Docker 컨테이너 간의 네트워크를 연결하여 DB 에 데이터 삽입</p></li>
<li><p>DB 컨테이너와 데이터 생성 컨테이너를 묶는 Docker Compose 파일 작성</p></li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>실습을 진행했던 코드를 보고싶으시다면 <a href="https://github.com/Ui-Seok/mlops-tutorial">여기</a>를 눌러주세요</p>
</div>
</div>
</section>
<section id="실습" class="level2">
<h2 class="anchored" data-anchor-id="실습">실습</h2>
<section id="data-generator-on-docker" class="level3">
<h3 class="anchored" data-anchor-id="data-generator-on-docker">1. Data Generator on Docker</h3>
<p><strong>앞에서 만들었던 데이터 생성 코드(<code>data_generator.py</code>로 부를 예정)를 활용</strong></p>
<ul>
<li><p>코드 실행 순서</p>
<ol type="1">
<li><p>DB에 연결하는 connector 생성</p></li>
<li><p>연결된 DB에 <code>iris_data</code> 테이블 생성</p></li>
<li><p>Iris 데이터 불러오기</p></li>
<li><p>불러온 데이터 중 랜덤으로 row 1개를 DB에 삽입</p></li>
<li><p>4번을 계속해서 반복</p></li>
</ol></li>
</ul>
<p><strong>Dockerfile 작성</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> amd64/python:3.9-slim</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> update <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\ </span></span>
<span id="cb1-4">    postgresql-client \ </span>
<span id="cb1-5">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">WORKDIR</span> /usr/app</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> pip <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&amp;&amp;</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\ </span></span>
<span id="cb1-10">    pip install scikit-learn pandas psycopg2-binary</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">COPY</span> data_generator.py data_generator.py</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ENTRYPOINT</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data_generator.py"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--db-host"</span>]</span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">CMD</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"localhost"</span>]</span></code></pre></div>
<ul>
<li><em>from</em> : 이미지를 만들 때 base 가 되는 이미지 지정</li>
<li><em>RUN</em> : 이미지를 만들 때 실행할 코드를 지정, 첫 번째 <code>RUN</code> 에서는 해당 Dockerfile 을 이용하여 컨테이너에 접근하여 <code>psql</code> 을 사용하기 위해 <code>postgresql-client</code> 을 설치</li>
<li><em>WORKDIR</em> : 작업 directory 지정</li>
<li><em>RUN</em> : 두 번째 <code>RUN</code> 에서는 컨테이너에서 python 스크립트를 실행할 때 필요한 패키지 설치</li>
<li><em>COPY</em> : <code>WORKDIR</code> 로 지정한 directory 를 기준으로 파일이나 폴더를 이미지에 복사</li>
<li><em>ENTRYPOINT</em> : 컨테이너가 실행될 때 시작할 프로세스를 입력</li>
<li><em>CMD</em> : 컨테이너가 실행될 때 <code>ENTRYPOINT</code> 에 전달할 argument 를 입력</li>
</ul>
<p><strong>Docker build</strong></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb2-1">$ docker build <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">OPTIONS</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> PATH | URL | -</span></code></pre></div>
<p>-&gt; 이 명령어를 통해 dockerfile 을 기준으로 이미지를 생성</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb3-1">$ docker run <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">docker image name</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p>-&gt; build 한 이미지 실행</p>
<p>하지만 port 및 TCP/IP 관련 에러가 뜨는데 이는 local 과 DB container 는 연결되어 있지만 <code>Data Generator</code> 과 DB Container 가 연결되어 있지 않음</p>
<p>이를 해결하기 위해 컨테이너 간 통신할 수 있도록 네트워크를 생성해야 함</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-11-25-MLOps-day3/fig1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">에러 발생 예시</figcaption>
</figure>
</div>
</section>
<section id="네트워크-연결" class="level3">
<h3 class="anchored" data-anchor-id="네트워크-연결">2. 네트워크 연결</h3>
<p><strong><code>docker network</code> 사용</strong></p>
<p>네트워크 정의 및 생성</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb4-1">$ docker network create <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">network-name</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p>실행 중인 DB 컨테이너를 생성된 네트워크에 연결</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb5-1">$ docker network connect <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">network-name</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">] [DB container name]</span></span></code></pre></div>
<ul>
<li><p>EX)</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb6-1">$ docker network connect my-network postgres-server</span></code></pre></div></li>
</ul>
<p>네트워크 삭제</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb7-1">$ docker network rm <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">network-name</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p><strong>docker 재 실행</strong></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb8-1">$ docker run -d \</span>
<span id="cb8-2">    --name <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">docker image name</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> \ </span>
<span id="cb8-3">    --network <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">"network-name"</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> \ </span></code></pre></div>
<ul>
<li><p>EX)</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb9-1">$ docker run -d \ </span>
<span id="cb9-2">    --name data-generator \ </span>
<span id="cb9-3">    --network "my-network" \ </span>
<span id="cb9-4">    data-generator "postgres-server"</span></code></pre></div></li>
</ul>
<p>-&gt; <code>psql</code> 을 이용하여 DB에 접속해서 확인해보면 추가되는 것을 확인할 수 있음</p>
</section>
<section id="docker-compose" class="level3">
<h3 class="anchored" data-anchor-id="docker-compose">3. Docker Compose</h3>
<p><strong>Compose 파일의 아키텍처</strong></p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span></span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb10-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">postgres-server</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb10-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        ...</span></span>
<span id="cb10-6"></span>
<span id="cb10-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data-generator</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb10-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        ...</span></span></code></pre></div>
<ul>
<li><em>version</em> : Compose 파일의 버전</li>
<li><em>services</em> : Compose 에 묶일 서비스들을 의미</li>
</ul>
<p><strong>Postgres server service</strong></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span></span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">postgres-server</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">image</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> postgres:14.0</span></span>
<span id="cb11-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">container_name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> postgres-server</span></span>
<span id="cb11-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ports</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 5432:5432</span></span>
<span id="cb11-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">environment</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">POSTGRES_USER</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> myuser</span></span>
<span id="cb11-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">POSTGRES_PASSWORD</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mypassword</span></span>
<span id="cb11-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">POSTGRES_DB</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> mydatabase</span></span></code></pre></div>
<ul>
<li><em>postgres-server</em> : 서비스의 이름, 실행되는 컨테이너 호스트의 이름</li>
<li><em>ports</em> : 컨테이너에서 외부로 노출할 포트 포워딩을 설정, <code>host:container</code> 형식으로 사용되고 여러 개 지정 가능</li>
<li><em>environment</em> : 컨테이너를 실행할 때 사용한 <code>-e</code> 옵션과 같은 역할</li>
</ul>
<p><strong>Data generator service</strong></p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span></span>
<span id="cb12-2"></span>
<span id="cb12-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb12-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data-generator</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb12-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb12-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">context</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> .</span></span>
<span id="cb12-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dockerfile</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Dockerfile</span></span>
<span id="cb12-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">container_name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> data-generator</span></span>
<span id="cb12-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">depends_on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb12-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">            </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> postgres_server</span></span>
<span id="cb12-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"postgres-server"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<ul>
<li><em>build</em> :
<ul>
<li><em>context</em> : 이미지를 build 하기 위해 dockerfile 이 있는 절대경로 및 상대경로 설정</li>
<li><em>dockerfile</em> : <em>context</em> 에서 설정한 경로에 있는 dockerfile 의 파일명 입력</li>
</ul></li>
<li><em>depends_on</em> : Compose 로 띄워지는 서비스 간의 종속성 순서대로 서비스를 시작할 때 사용</li>
<li><em>command</em> : Dockerfile 에 작성되어 있는 <code>CMD</code> 를 덮어씀</li>
</ul>
<p>위에서 작성한 코드를 하나의 파일로 합쳐 만들고 실행</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb13-1">$ docker compose up -d</span></code></pre></div>
<ul>
<li><em>-d</em> : Detached 모드(백그라운드에서 컨테이를 실행 후 유지)로 실행</li>
</ul>
<p>하지만 <code>docker ps</code> 를 입력해보면 postgres server 만 띄워져있음</p>
<p><code>depends on</code> 으로 서비스 간의 종속성은 정해졌지만, 실제로 postgres-server 가 띄워진 뒤에 곧바로 data-generator 가 띄워짐</p>
<p>postgres-server 의 준비가 되지 않은 상태로 data-generator 가 DB 와 연결을 하려다 보니 Exited 문제가 발생</p>
<p>-&gt; 이를 해결하기 위해 <code>healthcheck</code> 와 <code>condition</code> 을 추가</p>
<p><strong><code>healthcheck</code> 와 <code>condition</code> 추가하기</strong></p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### postgres-server에 추가</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">healthcheck</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb14-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CMD"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pg_isready"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-q"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-U"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myuser"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-d"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mydatabase"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb14-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interval</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 10s</span></span>
<span id="cb14-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timeout</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> 5s</span></span>
<span id="cb14-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">retries</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb14-7"></span>
<span id="cb14-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### data-generator에 추가</span></span>
<span id="cb14-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">depends_on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb14-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">postgres-server</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb14-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">condition</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> service_healthy</span></span></code></pre></div>
<ul>
<li><em>test</em> : 테스트 할 명령어 입력</li>
<li><em>interval</em> : Healthcheck 의 간격 설정</li>
<li><em>timeout</em> : Healthcheck 의 timeout 을 설정</li>
<li><em>retries</em> : Timeout 의 횟수 설정</li>
<li><em>condition</em> : Healthcheck 기능을 사용하기 위해 <em>depends_on</em> 의 parameter 로 <code>condition: service_healthy</code> 를 넣어줌</li>
</ul>
<p>이후 서비스를 다시 실행하면 문제 없이 실행이 가능</p>
</section>
</section>
<section id="reference" class="level2">
<h2 class="anchored" data-anchor-id="reference">Reference</h2>
<p><a href="https://mlops-for-mle.github.io/tutorial/">ML Engineer를 위한 MLOps tutorial</a></p>


</section>

 ]]></description>
  <category>mlops</category>
  <guid>https://ui-seok.github.io/docs/blog/posts/2023-11-25-MLOps-day3/index.html</guid>
  <pubDate>Sat, 25 Nov 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>MLOps for MLE - 2</title>
  <dc:creator>Ui Seok</dc:creator>
  <link>https://ui-seok.github.io/docs/blog/posts/2023-11-24-MLOps-day2/index.html</link>
  <description><![CDATA[ 



<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<ol type="1">
<li><p>생성한 테이블에 iris 데이터 삽입</p></li>
<li><p>자동으로 삽입해주는 스크립트 작성</p></li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>실습을 진행했던 코드를 보고싶으시다면 <a href="https://github.com/Ui-Seok/mlops-tutorial">여기</a>를 눌러주세요</p>
</div>
</div>
</section>
<section id="실습" class="level2">
<h2 class="anchored" data-anchor-id="실습">실습</h2>
<section id="데이터-삽입" class="level3">
<h3 class="anchored" data-anchor-id="데이터-삽입">1. 데이터 삽입</h3>
<p><strong><code>scikit-learn</code> 패키지의 <code>load_iris</code> 를 삽입하기 위해 앞에서 생성한 테이블의 columns 이름과 일치하도록 수정</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_iris</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_data():</span>
<span id="cb1-5">    X, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_iris(return_X_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, as_frame<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-6">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([X, y], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"columns"</span>)</span>
<span id="cb1-7">    rename_rule <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sepal length (cm)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sepal_length"</span>,</span>
<span id="cb1-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sepal width (cm)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sepal_width"</span>,</span>
<span id="cb1-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"petal length (cm)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"petal_length"</span>,</span>
<span id="cb1-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"petal width (cm)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"petal_width"</span>,</span>
<span id="cb1-12">    }</span>
<span id="cb1-13">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rename_rule)</span>
<span id="cb1-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span></code></pre></div>
<p><strong>Data Insertion Query 작성</strong></p>
<p>DB 에 데이터를 삽입하는 query 의 포맷은 다음과 같음</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">INSERT</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">INTO</span> {table_name} (col_1, col_2, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>.) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">VALUES</span> (val_1, val_2, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>.)</span></code></pre></div>
<p>이를 이해하고 query를 작성</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">insert_row_query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""</span></span>
<span id="cb3-2"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INSERT INTO iris_data</span></span>
<span id="cb3-3"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    (timestamp, sepal_length, sepal_width, petal_length, petal_width, target)</span></span>
<span id="cb3-4"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    VALUES (</span></span>
<span id="cb3-5"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        NOW(),</span></span>
<span id="cb3-6"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sepal_length<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-7"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sepal_width<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-8"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>petal_length<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-9"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>petal_width<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-10"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>target<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-11"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    );"""</span></span></code></pre></div>
<p>이 query 를 cursor 를 이용하여 DB 에 전달하는 코드 작성</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> psycopg2</span>
<span id="cb4-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_iris</span>
<span id="cb4-4"></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_data():</span>
<span id="cb4-7">    X, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_iris(return_X_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, as_frame<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-8">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([X, y], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"columns"</span>)</span>
<span id="cb4-9">    rename_rule <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb4-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sepal length (cm)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sepal_length"</span>,</span>
<span id="cb4-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sepal width (cm)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sepal_width"</span>,</span>
<span id="cb4-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"petal length (cm)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"petal_length"</span>,</span>
<span id="cb4-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"petal width (cm)"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"petal_width"</span>,</span>
<span id="cb4-14">    }</span>
<span id="cb4-15">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rename_rule)</span>
<span id="cb4-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb4-17"></span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> insert_data(db_connect, data):</span>
<span id="cb4-20">    insert_row_query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""</span></span>
<span id="cb4-21"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    INSERT INTO iris_data</span></span>
<span id="cb4-22"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        (timestamp, sepal_length, sepal_width, petal_length, petal_width, target)</span></span>
<span id="cb4-23"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        VALUES (</span></span>
<span id="cb4-24"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">            NOW(),</span></span>
<span id="cb4-25"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">            </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sepal_length<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-26"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">            </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>sepal_width<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-27"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">            </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>petal_length<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-28"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">            </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>petal_width<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-29"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">            </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>target<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-30"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        );"""</span></span>
<span id="cb4-31"></span>
<span id="cb4-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> db_connect.cursor() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cur:</span>
<span id="cb4-33">        cur.execute(insert_row_query)</span>
<span id="cb4-34">        db_connect.commit()</span>
<span id="cb4-35"></span>
<span id="cb4-36"></span>
<span id="cb4-37"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__main__"</span>:</span>
<span id="cb4-38">    db_connect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> psycopg2.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(</span>
<span id="cb4-39">        user<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myuser"</span>,</span>
<span id="cb4-40">        password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mypassword"</span>,</span>
<span id="cb4-41">        host<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"localhost"</span>,</span>
<span id="cb4-42">        port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,</span>
<span id="cb4-43">        database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mydatabase"</span>,</span>
<span id="cb4-44">    )</span>
<span id="cb4-45">    df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_data()</span>
<span id="cb4-46">    insert_data(db_connect, df.sample(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).squeeze())</span></code></pre></div>
<p>-&gt; <code>psql</code> 로 현재는 iris_data 에서 하나의 데이터만 DB에 입력된 상태임을 확인할 수 있음</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-11-24-MLOps-day2/fig1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">데이터 삽입</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-11-24-MLOps-day2/fig2.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">데이터 확인</figcaption>
</figure>
</div>
</section>
<section id="loop-추가" class="level3">
<h3 class="anchored" data-anchor-id="loop-추가">2. Loop 추가</h3>
<p><code>insert_data</code> 함수를 계속해서 반복하도록 하는 코드 작성</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_data(db_connect, df):</span>
<span id="cb5-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb5-5">        insert_data(db_connect, df.sample(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).squeeze())</span>
<span id="cb5-6">        time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<p>-&gt; <code>time</code> 패키지의 <code>sleep</code> 함수를 이용해서 DB의 부하 줄이기</p>
</section>
</section>
<section id="reference" class="level2">
<h2 class="anchored" data-anchor-id="reference">Reference</h2>
<p><a href="https://mlops-for-mle.github.io/tutorial/">ML Engineer를 위한 MLOps tutorial</a></p>


</section>

 ]]></description>
  <category>mlops</category>
  <guid>https://ui-seok.github.io/docs/blog/posts/2023-11-24-MLOps-day2/index.html</guid>
  <pubDate>Thu, 23 Nov 2023 15:00:00 GMT</pubDate>
</item>
<item>
  <title>MLOps for MLE - 1</title>
  <dc:creator>Ui Seok</dc:creator>
  <link>https://ui-seok.github.io/docs/blog/posts/2023-11-23-MLOps-day1/index.html</link>
  <description><![CDATA[ 



<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<ol type="1">
<li><p>Docker 설치 및 PostgreSQL DB 서버 생성</p></li>
<li><p>DB 의 role name 과 attribute 확인</p></li>
<li><p>생성된 DB 에 query 를 작성하여 테이블 생성</p></li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>실습을 진행했던 코드를 보고싶으시다면 <a href="https://github.com/Ui-Seok/mlops-tutorial">여기</a>를 눌러주세요</p>
</div>
</div>
</section>
<section id="실습" class="level2">
<h2 class="anchored" data-anchor-id="실습">실습</h2>
<section id="db-서버-생성-및-확인" class="level3">
<h3 class="anchored" data-anchor-id="db-서버-생성-및-확인">1. DB 서버 생성 및 확인</h3>
<p><strong>Docker 설치 후 <code>docker run</code> 명령어를 사용하여 DB 서버 생성</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb1-1">$ docker run -d \</span>
<span id="cb1-2">  --name postgres-server \</span>
<span id="cb1-3">  -p 5432:5432 \</span>
<span id="cb1-4">  -e POSTGRES_USER=myuser \</span>
<span id="cb1-5">  -e POSTGRES_PASSWORD=mypassword \</span>
<span id="cb1-6">  -e POSTGRES_DB=mydatabase \</span>
<span id="cb1-7">  postgres:14.0</span></code></pre></div>
<ul>
<li><em>-d</em> : 컨테이너가 detached 모드로 실행</li>
<li><em>-p</em> : port forwarding 설정</li>
<li><em>-e</em> : 환경 변수 설정</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-11-23-MLOps-day1/fig1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">docker ps 로 현재 컨테이너 동작 확인</figcaption>
</figure>
</div>
<p><strong><code>psql</code> 을 통해 PostgreSQL DB 서버 접속</strong></p>
<p>-&gt; <code>psql</code>은 PostgreSQL DB 서버를 확인할때 사용하는 CLI 툴</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb2-1">$ PGPASSWORD=mypassword psql -h localhost -p {port} -U myuser -d mydatabase</span></code></pre></div>
<ul>
<li><em>PGPASSWORD</em> : 접속할 유저의 비밀번호</li>
<li><em>h</em> : 호스트 지정</li>
<li><em>U</em> : 접속할 유저 이름 입력</li>
<li><em>d</em> : DB 이름 입력</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-11-23-MLOps-day1/fig2.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">SQL 서버에 접속 한 모습과 <code>\du</code> 를 입력해 DB 의 role name 과 arrtributes 를 확인</figcaption>
</figure>
</div>
</section>
<section id="db-table-생성" class="level3">
<h3 class="anchored" data-anchor-id="db-table-생성">2. DB Table 생성</h3>
<p><strong><code>psycopg2</code> 를 이용하여 DB 접근</strong></p>
<p>-&gt; <code>connect</code> 함수 사용</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> psycopg2</span>
<span id="cb3-2"></span>
<span id="cb3-3">db_connect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> psycopg2.<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">connect</span>(</span>
<span id="cb3-4">    user<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myuser"</span>,</span>
<span id="cb3-5">    password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mypassword"</span>,</span>
<span id="cb3-6">    host<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"localhost"</span>,</span>
<span id="cb3-7">    port<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5432</span>,</span>
<span id="cb3-8">    database<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mydatabase"</span>,</span>
<span id="cb3-9">)</span></code></pre></div>
<p>-&gt; DB 를 생성할 때 입력한 정보 입력</p>
<p><strong>SQL Table Creation</strong></p>
<p>아래와 같은 형식으로 작성</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">CREATE</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">TABLE</span> table_name (</span>
<span id="cb4-2">    column1 datatype,</span>
<span id="cb4-3">    column2 datatype,</span>
<span id="cb4-4">    column3 datatype,</span>
<span id="cb4-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span>.</span>
<span id="cb4-6">);</span></code></pre></div>
<p>-&gt; 이 실습에서는 <code>scikit-learn</code> 패캐지의 <code>load_iris</code> 사용</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">create_table_query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb5-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">CREATE TABLE IF NOT EXISTS iris_data (</span></span>
<span id="cb5-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    id SERIAL PRIMARY KEY,</span></span>
<span id="cb5-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    timestamp timestamp,</span></span>
<span id="cb5-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    sepal_length float8,</span></span>
<span id="cb5-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    sepal_width float8,</span></span>
<span id="cb5-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    petal_length float8,</span></span>
<span id="cb5-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    petal_width float8,</span></span>
<span id="cb5-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    target int</span></span>
<span id="cb5-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">);"""</span></span></code></pre></div>
<p><strong>Send Query to DB</strong></p>
<ol type="1">
<li><p>Connector 에서 cursor 를 열고, cursor 에 query 전달</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">cur <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> db_connect.cursor()</span>
<span id="cb6-2">cur.execute(create_table_query)</span></code></pre></div></li>
<li><p>전달된 query 를 실행하기 위해 connector에 <code>commit</code></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">db_connect.commit()</span></code></pre></div></li>
<li><p>Cursor 의 사용이 끝나면 cursor를 <code>close</code></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">cur.close()</span></code></pre></div></li>
</ol>
<p>하나의 프로세스로 만들게되면 다음과 같음</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> db_connect.cursor() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cur:</span>
<span id="cb9-2">    cur.execute(create_table_query)</span>
<span id="cb9-3">    db_connect.commit()</span></code></pre></div>
<p><strong>테이블 확인</strong></p>
<p><code>psql</code> 을 이용하여 DB에 접속하고 <code>\d</code> 를 입력하여 생성된 테이블들의 목록을 확인</p>
<p><code>select * from iris_data;</code> 를 입력하면 <code>iris_data</code> 테이블에 있는 데이터를 확인 할 수 있음</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://ui-seok.github.io/docs/blog/posts/2023-11-23-MLOps-day1/fig3.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">테이블 확인</figcaption>
</figure>
</div>
</section>
</section>
<section id="reference" class="level2">
<h2 class="anchored" data-anchor-id="reference">Reference</h2>
<p><a href="https://mlops-for-mle.github.io/tutorial/">ML Engineer를 위한 MLOps tutorial</a></p>


</section>

 ]]></description>
  <category>mlops</category>
  <guid>https://ui-seok.github.io/docs/blog/posts/2023-11-23-MLOps-day1/index.html</guid>
  <pubDate>Wed, 22 Nov 2023 15:00:00 GMT</pubDate>
</item>
</channel>
</rss>
